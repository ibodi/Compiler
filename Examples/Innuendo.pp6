fun foldr (args : ((int * int) -> int) * (int * int list)) : int = 
  match snd (snd args) with
  | [] -> fst (snd args)
  | x :: xs -> (fst args) (x, foldr (fst args, (fst (snd args), xs)))
  
fun toBinList(x : int) : int list = 
  if x = 0 then
	[] : int list
  else
    (x mod 2) :: toBinList(x div 2)

fun toBin(x : int) : int =
  foldr ((fn(x : int * int) -> fst x + 10 * snd x), (0, (toBinList x))) 

input x in toBin x